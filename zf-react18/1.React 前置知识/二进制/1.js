//机器数、真值、原码、反码、补码

//1.机器数：八位二进制
console.log((10).toString(2).padStart(8, "0"));
console.log(parseInt("00001010", 2));

//2.真值：十进制

//3.原码
//[+1] = [0000 0001]原码
//[-1] = [1000 0001]原码

//原码范围
// [1111 1111 0111 1111]
// [-127, 127]

//4.反码
// 正数：不变
// 负数：符号位不变、其他位取反
//[+1] = [0000 0001]原 = [0000 0001]反
//[-1] = [1000 0001]原 = [1111 1110]反

//5.补码
// 正数：不变
// 负数：符号位不变、其他位取反，最后 + 1
//[+1] = [0000 0001]原 = [0000 0001]反 = [0000 0001]补
//[-1] = [1000 0001]原 = [1111 1110]反 = [1111 1111]补

//原码减法的问题
//[1] + [-1] = [0000 0001]原 + [1000 0001]原 = [1000 0010]原 = -2

//反码实现减法，问题是最后会留下最高位为符号位的 1
//[1] + [-1] = [0000 0001]反 + [1111 1110]反 = [1111 1111]反 = [1000 0000]原 = -0

//补码实现减法
//[1] + [-1] = [0000 0001]补 + [1111 1111]补 = 1(溢出不管)[0000 0000]补 = [0000 0000]原 = 0



//    1  [0000 0001]                                              1  [0000 0001]
// +                                                          +
//   -1  [1000 0001]      补码(符号不变，其他按位取反，最后加1)=>      -1  [1111 1111]
//                    [1000 0001] => [1111 1110] => [1111 1111]
//-------------------------------------------------------------------------------------------------
//   -3  [1000 0010]❌                                            0  1(移除)[0000 0000]✅



//    2  [0000 0010]                                              2  [0000 0010]
// +                                                          +
//   -2  [1000 0010]      补码(符号不变，其他按位取反，最后加1)=>      -2  [1111 1110]
//                    [1000 0010] => [1111 1101] => [1111 1110]
//-------------------------------------------------------------------------------------------------
//   -4  [1000 0100]❌                                            0  1(移除)[0000 0000]✅



//    3  [0000 0011]                                              3  [0000 0011]
// +                                                          +
//   -3  [1000 0011]      补码(符号不变，其他按位取反，最后加1)=>      -3  [1111 1101]
//                    [1000 0011] => [1111 1100] => [1111 1101]
//-------------------------------------------------------------------------------------------------
//   -6  [1000 0110]❌                                            0  1(移除)[0000 0000]✅
